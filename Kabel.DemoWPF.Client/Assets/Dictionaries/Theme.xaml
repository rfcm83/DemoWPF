<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Kabel.DemoWPF.Client.Converters">

    <BooleanToVisibilityConverter x:Key="Bool2VisibilityConverter"/>
    <c:InvertBooleanConverter x:Key="InvertBoolConverter"/>
    
    <Color x:Key="ColorAdd">#FFF1F126</Color>
    <Color x:Key="ColorEdit">#FF28C110</Color>
    <Color x:Key="ColorDelete">#FFFF3535</Color>
    <Color x:Key="ColorSave">#FF60607E</Color>
    <Color x:Key="ColorRefresh">#FF00B9FF</Color>
    <Color x:Key="ColorForeground">#FF2C2C2C</Color>
    <Color x:Key="ColorBackground">#FFFAFAFA</Color>

    <SolidColorBrush x:Key="BrushAdd" Color="{DynamicResource ColorAdd}"/>
    <SolidColorBrush x:Key="BrushEdit" Color="{DynamicResource ColorEdit}"/>
    <SolidColorBrush x:Key="BrushDelete" Color="{DynamicResource ColorDelete}"/>
    <SolidColorBrush x:Key="BrushSave" Color="{DynamicResource ColorSave}"/>
    <SolidColorBrush x:Key="BrushRefresh" Color="{DynamicResource ColorRefresh}"/>
    <SolidColorBrush x:Key="BrushForeground" Color="{DynamicResource ColorForeground}"/>
    <SolidColorBrush x:Key="BrushBackground" Color="{DynamicResource ColorBackground}"/>
    <SolidColorBrush x:Key="BrushBusyBackground" Color="{DynamicResource ColorBackground}"
                     Opacity="0.7"/>
    
    <BlurEffect x:Key="EffectDisabled"/>
    <DropShadowEffect x:Key="ShadowEffect"/>


    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontSize" Value="10pt"/>
        <Setter Property="Foreground" Value="{DynamicResource BrushForeground}"/>
    </Style>

    <Style x:Key="Labels" TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bd" CornerRadius="25" BorderThickness="2"
                            Background="{StaticResource BrushBackground}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentControl x:Name="Ctrol" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}"                                             
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </ContentControl>
                    </Border>
                    <ControlTemplate.Triggers>
                		<Trigger Property="IsMouseOver" Value="True">
                			<Setter Property="Background" TargetName="Bd"
                				Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                			<Setter Property="BorderBrush" TargetName="Bd"
                				Value="{StaticResource BrushBackground}"/>
                			<Setter Property="BorderBrush" TargetName="Ctrol"
                				Value="{StaticResource BrushBackground}"/>
                		</Trigger>
                		<Trigger Property="IsPressed" Value="True">
                			<Setter Property="Background" TargetName="Bd"
                				Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                			<Setter Property="BorderBrush" TargetName="Bd"
                				Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                			<Setter Property="BorderBrush" TargetName="Ctrol"
                				Value="{StaticResource BrushBackground}"/>
                		</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Effect" TargetName="Bd" Value="{DynamicResource EffectDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="3.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Bd" CornerRadius="25" BorderThickness="2"
                            Background="{StaticResource BrushBackground}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentControl x:Name="Ctrol" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}"                                             
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </ContentControl>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource BrushBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Ctrol"
                                    Value="{StaticResource BrushBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                            <Setter Property="BorderBrush" TargetName="Ctrol"
                                    Value="{StaticResource BrushBackground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                            <Setter Property="BorderBrush" TargetName="Bd"
                                    Value="{StaticResource BrushBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Ctrol"
                                    Value="{StaticResource BrushForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Effect" TargetName="Bd" Value="{DynamicResource EffectDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonsOperationsStyle" TargetType="UserControl">
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ContentControl}}"/>
    </Style>

    <Style x:Key="VectorsStyle" TargetType="Path">
        <Setter Property="Fill" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>
</ResourceDictionary>